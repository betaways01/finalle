# app.R
library(shiny)
library(shinyAce)

source("modules/exercise_observers.R")
source("database/db_init.R")
source("database/db_operations.R")
initialize_db("database/database.sqlite")

# Source the UI definition
source("modules/main_ui.R")
# Source the progress module
source("modules/progress.R")

# Define server logic
server <- function(input, output, session) {
  topics <- c("R Fundamentals", "Data Structures", "Data Visualization",
              "Data Analysis Types", "Descriptive Statistics", "Probability Statistics",
              "Inferential Hypothesis", "ANOVA", "Regression Analysis",
              "Categorical Data Analysis", "Code Challenge 1", "Code Challenge 2",
              "Code Challenge 3", "Data Wrangling", "Advanced R Programming")
  file_names <- c("01-R-Fundamentals.html", "02-DataStructures.html", 
                  "03-DataVisualization.html", "04-DataAnalysisTypes.html", 
                  "05-DescriptiveStatistics.html", "06-Probability-Statistics.html", 
                  "07-Inferential-Hypothesis.html", "08-ANOVA.html", 
                  "09-RegressionAnalysis.html", "10-CategoricalDataAnalysis.html", 
                  "11-CodeChallenge-1.html", "12-CodeChallenge-2.html", 
                  "13-CodeChallenge-3.html", "14-DataWrangling.html", 
                  "15-AdvancedRProgramming.html")
  
  for (i in seq_along(file_names)) {
    theory_output_id <- paste("theory", gsub(" ", "", gsub("and", "And", topics[i])), sep = "_")
    local({
      output_id <- theory_output_id
      file_name <- file_names[i]
      output[[output_id]] <- renderUI({
        tryCatch({
          tags$iframe(src = file_name, class = "responsive-iframe")
        }, error = function(e) {
          div("Error loading content: ", e$message)
        })
      })
    })
  }
  
  # Reactive values to store outputs and student information
  rv <- reactiveValues( student_name = NULL, progress = NULL)
  
  # Show modal dialog for student name input
  showModal(modalDialog(
    textInput("student_name", "Enter your name:"),
    actionButton("submit_name", "Submit"),
    easyClose = FALSE,
    footer = NULL
  ))
  
  # Observe event for name submission
  observeEvent(input$submit_name, {
    req(input$student_name)
    rv$student_name <- input$student_name
    message("Student name set to: ", rv$student_name)  # Debug statement
    rv$student_id <- get_or_create_student_id(input$student_name)
    removeModal()
  })
  
  # Update title panel
  observe({
    req(rv$student_name)
    output$title_panel <- renderUI({
      fluidRow(
        column(10, h1(paste("Interactive R Course"))),
        column(10, h3(HTML(paste("Working as ", 
                                 "<span style='color: green;'>", rv$student_name, "</span>", "")))),
        column(2, actionButton("logout", "Logout", style = "float:right; margin-top: 20px;"))
      )
    })
  })
  
  # Observe event for logout
  observeEvent(input$logout, {
    showModal(modalDialog(
      title = "Logout",
      "Are you sure you want to logout?",
      footer = tagList(
        modalButton("Cancel"),
        actionButton("confirm_logout", "Logout")
      )
    ))
  })
  
  observeEvent(input$confirm_logout, {
    # Save progress here if necessary
    removeModal()
    session$reload()
  })
  
  # Initialize exercise observers
  tryCatch({
    initializeExerciseObservers(input, output, session, rv)
  }, error = function(e) {
    cat("Error initializing exercise observers: ", e$message, "\n")
  })
  
  # Call progress module
  progressServer("progress", rv)


  # Define exercise IDs
  exercise_ids <- c("exercises_RFundamentals", "exercises_DataStructures", 
                    "exercises_DataVisualization", "exercises_DataAnalysisTypes", 
                    "exercises_DescriptiveStatistics", "exercises_ProbabilityStatistics", 
                    "exercises_InferentialHypothesis", "exercises_ANOVA", 
                    "exercises_RegressionAnalysis", "exercises_CategoricalDataAnalysis", 
                    "exercises_CodeChallenge1", "exercises_CodeChallenge2", 
                    "exercises_CodeChallenge3", "exercises_DataWrangling", 
                    "exercises_AdvancedRProgramming")
  
}

# Run the application
shinyApp(ui = ui, server = server)